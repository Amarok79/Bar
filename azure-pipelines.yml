trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  - name: solution
    value: '*.sln'
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'
  - group: bar-viewer-certificate

steps:

- task: DownloadSecureFile@1
  name: viewerCertificate
  inputs:
    secureFile: '$(pfx.filename)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Start adding the PFX file to the certificate store."

      $pfxpath = '$(viewerCertificate.secureFilePath)'
      $password = '$(pfx.password)'
      
      Add-Type -AssemblyName System.Security
      $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
      $cert.Import($pfxpath, $password, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]"PersistKeySet")
      $store = new-object system.security.cryptography.X509Certificates.X509Store -argumentlist "MY", CurrentUser
      $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]"ReadWrite")
      $store.Add($cert)
      $store.Close()

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'select'

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  inputs:
    SonarCloud: Sonar
    organization: 'amarok79-github'
    projectKey: 'Amarok79_Bar'
    projectName: Bar

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:UapAppxPackageBuildMode=Sideload
                  /p:AppxBundlePlatforms="x86"
                  /p:AppxBundle=Always
                  /p:AppxPackageSigningEnabled=true
                  /p:PackageCertificateKeyFile="$(viewerCertificate.filename)"
                  /p:PackageCertificatePassword="$(pfx.password)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: 'bin\tests\**\Tests*.dll'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    codeCoverageEnabled: true
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1

- task: CopyFiles@2
  inputs:
    Contents: 'bin\app\apppackage\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
